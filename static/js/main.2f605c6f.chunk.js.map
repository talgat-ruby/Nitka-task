{"version":3,"sources":["redux/utils/shuffle.js","redux/constants/hotels.js","redux/reducers/hotels.js","redux/selectors/hotels.js","components/Home/Home.js","components/Hotel/Hotel.js","components/NoMatch/NoMatch.js","components/App/App.js","serviceWorker.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["shuffle","list","result","Object","toConsumableArray","i","length","index","Math","floor","random","_ref","initialState","hotelsList","createSelector","store","hotels","getHotel","_","props","match","params","id","hotelId","find","Number","mapDispatchToProps","getHotels","_ref$search","arguments","undefined","search","type","data","filter","_ref2","name","city","s","toLowerCase","some","val","includes","slice","connect","state","history","_useState","useState","_useState2","slicedToArray","setSearch","useEffect","react_default","a","createElement","layout","Header","input","placeholder","size","onChange","e","target","value","Content","className","es_list","itemLayout","dataSource","renderItem","item","Item","key","extra","width","alt","src","photo","onClick","push","concat","Meta","title","description","icon","stars","DATE_FORMAT","setDates","dates","ownProps","hotel","breadcrumb","react_router_dom","to","card","actions","message","success","typography","Title","avatar","Paragraph","date_picker","RangePicker","format","map","d","moment","strDates","react_router","NoMatch","App","exact","path","component","Home","Hotel","Boolean","window","location","hostname","combineReducers","action","objectSpread","v","createStore","rootReducer","composeWithDevTools","__webpack_require__","__webpack_exports__","src_WrappedApp","WrappedApp","es","components_App_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f605c6f.chunk.js","sourcesContent":["export default function shuffle(list) {\n\tconst result = [...list];\n\tfor (let i = list.length - 1; i >= 0; i--) {\n\t\tconst index = Math.floor(Math.random() * i);\n\t\t[result[index], result[i]] = [result[i], result[index]];\n\t}\n\n\treturn result;\n}\n","export const GET_HOTELS = 'GET_HOTELS';\n\nexport const SET_DATES = 'SET_DATES';\n","import data from '../../data.json';\n\nimport {shuffle} from '../utils/';\n\nimport {GET_HOTELS, SET_DATES} from '../constants/';\n\nconst initialState = {\n\tlist: []\n};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_HOTELS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlist: action.list\n\t\t\t};\n\t\tcase SET_DATES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlist: state.list.map(v =>\n\t\t\t\t\taction.id === v.id ? {...v, dates: action.dates} : v\n\t\t\t\t)\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const getHotels = ({search = ''} = {}) => ({\n\ttype: GET_HOTELS,\n\tlist: search\n\t\t? data.filter(({name, city}) => {\n\t\t\t\tconst s = search.toLowerCase();\n\t\t\t\treturn [name, city].some(val => val.toLowerCase().includes(s));\n\t\t  })\n\t\t: shuffle(data).slice(0, 5)\n});\n\nexport const setDates = (id, dates) => ({\n\ttype: SET_DATES,\n\tid,\n\tdates\n});\n","import {createSelector} from 'reselect';\n\nexport const hotels = store => store.hotels;\n\nexport const hotelsList = createSelector(\n\thotels,\n\thotels => hotels.list\n);\n\nconst getIdFromLocation = (_, props) => props.match.params.id;\n\nexport const getHotel = createSelector(\n\thotelsList,\n\tgetIdFromLocation,\n\t(list, hotelId) => list.find(({id}) => id === Number(hotelId))\n);\n","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {Layout, Input, List, Icon} from 'antd';\n\nimport './Home.css';\n\nimport {getHotels} from '../../redux/reducers/hotels';\nimport {hotelsList} from '../../redux/selectors/';\n\nfunction Home({hotels, getHotels, history}) {\n\tconst [search, setSearch] = useState('');\n\n\tuseEffect(() => {\n\t\tgetHotels({search});\n\t}, [getHotels, search]);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Layout.Header>\n\t\t\t\t<Input\n\t\t\t\t\tplaceholder=\"Plaza or New York\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tonChange={e => setSearch(e.target.value)}\n\t\t\t\t\tvalue={search}\n\t\t\t\t/>\n\t\t\t</Layout.Header>\n\t\t\t<Layout.Content className=\"Home-Content\">\n\t\t\t\t<List\n\t\t\t\t\titemLayout=\"vertical\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tdataSource={hotels}\n\t\t\t\t\trenderItem={item => (\n\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\tclassName=\"Home-Item\"\n\t\t\t\t\t\t\textra={<img width={272} alt=\"logo\" src={item.photo} />}\n\t\t\t\t\t\t\tonClick={() => history.push(`/${item.id}`)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<List.Item.Meta title={item.name} description={item.city} />\n\t\t\t\t\t\t\t<div className=\"Home-Star\">\n\t\t\t\t\t\t\t\t<Icon type=\"star-o\" />\n\t\t\t\t\t\t\t\t<span>{item.stars}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</Layout.Content>\n\t\t</Layout>\n\t);\n}\n\nconst mapStateToProps = state => ({\n\thotels: hotelsList(state)\n});\n\nconst mapDispatchToProps = {\n\tgetHotels\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Home);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link, Redirect} from 'react-router-dom';\nimport {\n\tLayout,\n\tBreadcrumb,\n\tCard,\n\tTypography,\n\tIcon,\n\tDatePicker,\n\tmessage\n} from 'antd';\nimport moment from 'moment';\n\nimport {setDates} from '../../redux/reducers/hotels';\nimport {getHotel} from '../../redux/selectors/';\n\nimport './Hotel.css';\n\nconst DATE_FORMAT = 'YYYY-MM-DD';\n\nfunction Hotel({hotel, setDates}) {\n\treturn hotel ? (\n\t\t<Layout>\n\t\t\t<Layout.Header className=\"Hotel-Header\">\n\t\t\t\t<Breadcrumb className=\"Hotel-Breadcrumb\">\n\t\t\t\t\t<Breadcrumb.Item key=\"home\">\n\t\t\t\t\t\t<Link to=\"/\" className=\"Hotel-Home\">\n\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Breadcrumb.Item>\n\t\t\t\t</Breadcrumb>\n\t\t\t</Layout.Header>\n\t\t\t<Layout.Content className=\"Hotel-Content\">\n\t\t\t\t<Card\n\t\t\t\t\tclassName=\"Hotel-Card\"\n\t\t\t\t\tactions={\n\t\t\t\t\t\thotel.dates && [\n\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\ttype=\"home\"\n\t\t\t\t\t\t\t\tonClick={() => message.success('Successfuly booked')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<Typography.Title>{hotel.name}</Typography.Title>\n\t\t\t\t\t<Card.Meta\n\t\t\t\t\t\tavatar={<img alt={hotel.name} src={hotel.photo} />}\n\t\t\t\t\t\ttitle={hotel.city}\n\t\t\t\t\t\tdescription={\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Typography.Paragraph>{hotel.description}</Typography.Paragraph>\n\t\t\t\t\t\t\t\t<Typography.Paragraph>\n\t\t\t\t\t\t\t\t\t<div className=\"Hotel-Star\">\n\t\t\t\t\t\t\t\t\t\t<Icon type=\"star-o\" />\n\t\t\t\t\t\t\t\t\t\t<span>{hotel.stars}</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Typography.Paragraph>\n\t\t\t\t\t\t\t\t<Typography.Paragraph>\n\t\t\t\t\t\t\t\t\t<DatePicker.RangePicker\n\t\t\t\t\t\t\t\t\t\tformat={DATE_FORMAT}\n\t\t\t\t\t\t\t\t\t\tplaceholder={['Start Time', 'End Time']}\n\t\t\t\t\t\t\t\t\t\tvalue={(hotel.dates || [null, null]).map(\n\t\t\t\t\t\t\t\t\t\t\td => d && moment(d, DATE_FORMAT)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\tonChange={(dates, strDates) =>\n\t\t\t\t\t\t\t\t\t\t\tsetDates(hotel.id, dates.length !== 0 ? strDates : null)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Typography.Paragraph>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t></Card.Meta>\n\t\t\t\t</Card>\n\t\t\t</Layout.Content>\n\t\t</Layout>\n\t) : (\n\t\t<Redirect to=\"/no-match\" />\n\t);\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n\thotel: getHotel(state, ownProps)\n});\n\nconst mapDispatchToProps = {\n\tsetDates\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Hotel);\n","import React from 'react';\nimport {Layout, Icon} from 'antd';\nimport {Link} from 'react-router-dom';\n\nimport './NoMatch.css';\n\nfunction NoMatch() {\n\treturn (\n\t\t<Layout className=\"NoMatch\">\n\t\t\t<Layout.Content className=\"NoMatch-Content\">\n\t\t\t\t<Icon type=\"close-circle\" />\n\t\t\t\t<span>\n\t\t\t\t\tPage not found. Go to back <Link to=\"/\">Home</Link>\n\t\t\t\t</span>\n\t\t\t</Layout.Content>\n\t\t</Layout>\n\t);\n}\n\nexport default NoMatch;\n","import React from 'react';\nimport {Switch, Route} from 'react-router';\n\nimport Home from '../Home/';\nimport Hotel from '../Hotel/';\nimport NoMatch from '../NoMatch/';\n\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t<Route path=\"/:id(\\d*)\" component={Hotel} />\n\t\t\t\t<Route component={NoMatch} />\n\t\t\t</Switch>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport hotels from './hotels';\n\nexport default combineReducers({hotels});\n","import {createStore} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nexport default createStore(rootReducer, composeWithDevTools());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nimport App from './components/App/';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\n\nimport './index.css';\n\nexport const WrappedApp = () => (\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>\n);\n\nReactDOM.render(<WrappedApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}